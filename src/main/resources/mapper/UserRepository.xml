<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lec.spring.repository.UserRepository">


    <sql id="SELECT_BASE">
        SELECT
            uid "uid"
             , username "username"
             , password "password"
             , nickname "nickname"
             , email "email"
             , regdate "regdate"
             , provider "provider"
             , providerId "providerId"
        FROM hot_user
        WHERE 1 = 1
    </sql>


    <select id="findById" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND uid = #{uid}
    </select>

    <select id="findByUsername" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND username = #{username}
    </select>

    <select id="findByNickname" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND nickname = #{nickname}
    </select>

    <select id="findByEmail" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND email = #{email}
    </select>


    <insert id="save" flushCache="true" parameterType="com.lec.spring.domain.User"
            keyProperty="uid" useGeneratedKeys="true" keyColumn="uid">
        INSERT INTO hot_user(username, password, nickname, email, provider, providerId)
        VALUES(#{username}, #{password}, #{nickname}, #{email}, #{provider}, #{providerId})
    </insert>

    <insert id="likesave" parameterType="com.lec.spring.domain.TourLikeList">
        INSERT INTO hot_tour_recommend(uid, tour_id)
        VALUES (#{uid},#{id})
    </insert>
    <insert id="camlikesave" parameterType="com.lec.spring.domain.CampingLikeList">
        INSERT INTO hot_camping_recommendcount(uid, camping_id)
        VALUES (#{uid},#{campingid})
    </insert>

    <delete id="deleteById">
        DELETE FROM hot_tour_recommend WHERE uid = #{uid} AND tour_id = #{id}
    </delete>
    <delete id="deleteBycamId">
        DELETE FROM hot_camping_recommendcount WHERE uid = #{uid} AND camping_id = #{campingid}
    </delete>


    <update id="update" flushCache="true" parameterType="com.lec.spring.domain.User">
        UPDATE hot_user SET username = #{username}, password = #{password}, nickname = #{nickname}, email = #{email}
        WHERE uid = #{uid}
    </update>
    
    
    <select id="findByuid" resultType="Long" parameterType="com.lec.spring.domain.User">
        SELECT uid FROM hot_user WHERE username = #{username}
    </select>

    <select id="findTourIdByUserId" parameterType="int" resultType="int">
        SELECT tour_id
        FROM hot_tour_recommend
        WHERE uid = #{userId}
    </select>

    <select id="getUserByUsername" parameterType="string" resultType="com.lec.spring.domain.User">
        SELECT * FROM hot_user WHERE username = #{username}
    </select>

    <!-- 아이디 찾기 -->
    <select id="findId" parameterType="String" resultType="String">
        select username from hot_user where email = #{email}
    </select>

    <!-- 비밀번호 변경 -->
    <update id="updatepw" parameterType="String">
        update hot_user set password = #{password} where username = #{username}
    </update>

<!--    &lt;!&ndash; 회원정보 수정 &ndash;&gt;-->
<!--    <update id="updatemypage" flushCache="true" parameterType="com.lec.spring.domain.User">-->
<!--        UPDATE hot_user SET nickname = #{nickname}, email = #{email} where username = #{username}-->
<!--    </update>-->


</mapper>