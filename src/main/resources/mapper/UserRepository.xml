<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lec.spring.repository.UserRepository">


    <sql id="SELECT_BASE">
        SELECT
            uid "uid"
             , username "username"
--              , name "name"
             , password "password"
             , nickname "nickname"
             , gender "gender"
             , email "email"
             , phonenumber "phonenumber"
             , regdate "regdate"
             , provider "provider"
             , providerId "providerId"
        FROM hot_user
        WHERE 1 = 1
    </sql>


    <select id="findById" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND uid = #{uid}
    </select>

    <select id="findByUsername" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND username = #{username}
    </select>

    <select id="findByNickname" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND nickname = #{nickname}
    </select>

    <select id="findByEmail" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND email = #{email}
    </select>

    <select id="findByPhoneNum" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND phonenumber = #{phonenumber}
    </select>


    <insert id="save" flushCache="true" parameterType="com.lec.spring.domain.User"
            keyProperty="uid" useGeneratedKeys="true" keyColumn="uid">
        INSERT INTO hot_user(username, password, nickname, email, phonenumber, gender, provider, providerId)
        VALUES(#{username}, #{password}, #{nickname}, #{email}, #{phonenumber}, #{gender}, #{provider}, #{providerId})
    </insert>

    <update id="update" flushCache="true" parameterType="com.lec.spring.domain.User">
        UPDATE hpt_user SET username = #{username}, password = #{password}, nickname = #{nickname},
                            email = #{email}, phonenumber = #{phonenumber}, gender = #{gender}
        WHERE uid = #{uid}
    </update>

</mapper>