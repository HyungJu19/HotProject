<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lec.spring.repository.CommentRepository">

    <resultMap id="mapUser" type="com.lec.spring.domain.User">
        <result column="u_id" property="uid"/>
        <result column="u_username" property="username"/>
        <result column="u_password" property="password"/>
        <result column="u_name" property="name"/>
        <result column="u_email" property="email"/>
        <result column="u_regdate" property="regDate"/>
    </resultMap>

    <resultMap id="mapComment" type="com.lec.spring.domain.Comment">
        <result column="c_id" property="id"/>
        <result column="c_content" property="content"/>
        <result column="c_regdate" property="regDate"/>
        <result column="c_postId" property="regDate"/>
        <collection property="user" resultMap="mapUser"/>
    </resultMap>



    <select id="findByPost" resultMap="mapComment">
        SELECT
            c.id "c_id",
            c.content "c_content",
            c.regdate "c_regDate",
            c.postId "c_postId",
            u.uid "u_uid",
            u.username "u_username",
            u.password "u_password",
            u.name "u_name",
            u.email "u_email",
            u.regDate "u_regDate"
        FROM hot_comment c, hot_user u
        WHERE
            c.uid = u.uid
          AND c.regDate = #{post_id}
        ORDER BY c.id DESC
    </select>

    <insert id="commentSave" flushCache="true"
            parameterType="com.lec.spring.domain.Comment"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO hot_comment(id, postId, content)
        VALUES(#{id}, #{postId}, #{content})
    </insert>

    <delete id="deleteById" flushCache="true">
        DELETE FROM hot_comment WHERE id = #{id}
    </delete>

</mapper>











