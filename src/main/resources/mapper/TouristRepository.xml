




<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lec.spring.repository.TouristRepository">

    <sql id="SELECT_BASE">
        SELECT
        id "id"
             , title "title"
             , zipcode "zipcode"
             , addr1 "addr1"
        , areacode "areacode"
        , contentid "contentid"
        , contenttypeid "contenttypeid"
        , firstimage "firstimage"
        , mapx "mapx"
        , mapy "mapy"
        , sigungucode "sigungucode"
        , recommendCount "recommendCount"
        , cat1 "cat1"
        , cat2 "cat2"
        , cat3 "cat3"



        FROM tourist
        WHERE 1 = 1
    </sql>

<!--관광지-->

    <insert id="saveOrUpdateTourist" flushCache="true" parameterType="com.lec.spring.domain.TouristData"
    useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO tourist ( title,zipcode,addr1, areacode, contentid, contenttypeid, firstimage, mapx, mapy, sigungucode, cat1, cat2, cat3)
        VALUES (#{title},#{zipcode},#{addr1}, #{areacode}, #{contentid}, #{contenttypeid}, #{firstimage}, #{mapx}, #{mapy}, #{sigungucode}, #{cat1}, #{cat2}, #{cat3})
            ON DUPLICATE KEY UPDATE
                                 title = VALUES(title),
                                 zipcode = VALUES(zipcode),
                                 addr1 = VALUES(addr1),
                                 areacode = VALUES(areacode),
                                 contenttypeid = VALUES(contenttypeid),
                                 firstimage = VALUES(firstimage),
                                 mapx = VALUES(mapx),
                                 mapy = VALUES(mapy),
                                 sigungucode = VALUES(sigungucode),
                                 cat1 = VALUES(cat1),
                                 cat2 = VALUES(cat2),
                                 cat3 = VALUES(cat3);
    </insert>

<!--음식점-->
    <insert id="saveOrUpdateRestaurant" flushCache="true" parameterType="com.lec.spring.domain.RestaurantData"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO restaurant ( title,zipcode,addr1, areacode, contentid, contenttypeid, firstimage, mapx, mapy, sigungucode, cat1, cat2, cat3)
        VALUES (#{title},#{zipcode},#{addr1}, #{areacode}, #{contentid}, #{contenttypeid}, #{firstimage}, #{mapx}, #{mapy}, #{sigungucode}, #{cat1}, #{cat2}, #{cat3})
            ON DUPLICATE KEY UPDATE
                                 title = VALUES(title),
                                 zipcode = VALUES(zipcode),
                                 addr1 = VALUES(addr1),
                                 areacode = VALUES(areacode),
                                 contenttypeid = VALUES(contenttypeid),
                                 firstimage = VALUES(firstimage),
                                 mapx = VALUES(mapx),
                                 mapy = VALUES(mapy),
                                 sigungucode = VALUES(sigungucode),
                                 cat1 = VALUES(cat1),
                                 cat2 = VALUES(cat2),
                                 cat3 = VALUES(cat3);
    </insert>


<!--    문화시설-->
    <insert id="saveOrUpdateCultural" flushCache="true" parameterType="com.lec.spring.domain.CulturalData"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO cultural ( title,zipcode,addr1, areacode, contentid, contenttypeid, firstimage, mapx, mapy, sigungucode, cat1, cat2, cat3)
        VALUES (#{title},#{zipcode},#{addr1}, #{areacode}, #{contentid}, #{contenttypeid}, #{firstimage}, #{mapx}, #{mapy}, #{sigungucode}, #{cat1}, #{cat2}, #{cat3})
            ON DUPLICATE KEY UPDATE
                                 title = VALUES(title),
                                 zipcode = VALUES(zipcode),
                                 addr1 = VALUES(addr1),
                                 areacode = VALUES(areacode),
                                 contenttypeid = VALUES(contenttypeid),
                                 firstimage = VALUES(firstimage),
                                 mapx = VALUES(mapx),
                                 mapy = VALUES(mapy),
                                 sigungucode = VALUES(sigungucode),
                                 cat1 = VALUES(cat1),
                                 cat2 = VALUES(cat2),
                                 cat3 = VALUES(cat3);
    </insert>

<!--    축제행사-->
    <insert id="saveOrUpdateFestival" flushCache="true" parameterType="com.lec.spring.domain.FestivalData"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO festival ( title,zipcode,addr1, areacode, contentid, contenttypeid, firstimage, mapx, mapy, sigungucode, cat1, cat2, cat3)
        VALUES (#{title},#{zipcode},#{addr1}, #{areacode}, #{contentid}, #{contenttypeid}, #{firstimage}, #{mapx}, #{mapy}, #{sigungucode}, #{cat1}, #{cat2}, #{cat3})
            ON DUPLICATE KEY UPDATE
                                 title = VALUES(title),
                                 zipcode = VALUES(zipcode),
                                 addr1 = VALUES(addr1),
                                 areacode = VALUES(areacode),
                                 contenttypeid = VALUES(contenttypeid),
                                 firstimage = VALUES(firstimage),
                                 mapx = VALUES(mapx),
                                 mapy = VALUES(mapy),
                                 sigungucode = VALUES(sigungucode),
                                 cat1 = VALUES(cat1),
                                 cat2 = VALUES(cat2),
                                 cat3 = VALUES(cat3);
    </insert>

<!--    레포츠-->
    <insert id="saveOrUpdateSports" flushCache="true" parameterType="com.lec.spring.domain.SportsData"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO sports ( title,zipcode,addr1, areacode, contentid, contenttypeid, firstimage, mapx, mapy, sigungucode, cat1, cat2, cat3)
        VALUES (#{title},#{zipcode},#{addr1}, #{areacode}, #{contentid}, #{contenttypeid}, #{firstimage}, #{mapx}, #{mapy}, #{sigungucode}, #{cat1}, #{cat2}, #{cat3})
            ON DUPLICATE KEY UPDATE
                                 title = VALUES(title),
                                 zipcode = VALUES(zipcode),
                                 addr1 = VALUES(addr1),
                                 areacode = VALUES(areacode),
                                 contenttypeid = VALUES(contenttypeid),
                                 firstimage = VALUES(firstimage),
                                 mapx = VALUES(mapx),
                                 mapy = VALUES(mapy),
                                 sigungucode = VALUES(sigungucode),
                                 cat1 = VALUES(cat1),
                                 cat2 = VALUES(cat2),
                                 cat3 = VALUES(cat3);
    </insert>

<!--    숙박-->
    <insert id="saveOrUpdateLodgment" flushCache="true" parameterType="com.lec.spring.domain.LodgmentData"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO lodgment ( title,zipcode,addr1, areacode, contentid, contenttypeid, firstimage, mapx, mapy, sigungucode, cat1, cat2, cat3)
        VALUES (#{title},#{zipcode},#{addr1}, #{areacode}, #{contentid}, #{contenttypeid}, #{firstimage}, #{mapx}, #{mapy}, #{sigungucode}, #{cat1}, #{cat2}, #{cat3})
            ON DUPLICATE KEY UPDATE
                                 title = VALUES(title),
                                 zipcode = VALUES(zipcode),
                                 addr1 = VALUES(addr1),
                                 areacode = VALUES(areacode),
                                 contenttypeid = VALUES(contenttypeid),
                                 firstimage = VALUES(firstimage),
                                 mapx = VALUES(mapx),
                                 mapy = VALUES(mapy),
                                 sigungucode = VALUES(sigungucode),
                                 cat1 = VALUES(cat1),
                                 cat2 = VALUES(cat2),
                                 cat3 = VALUES(cat3);
    </insert>


<!--    쇼핑-->
    <insert id="saveOrUpdateShopping" flushCache="true" parameterType="com.lec.spring.domain.ShoppingData"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO shopping ( title,zipcode,addr1, areacode, contentid, contenttypeid, firstimage, mapx, mapy, sigungucode, cat1, cat2, cat3)
        VALUES (#{title},#{zipcode},#{addr1}, #{areacode}, #{contentid}, #{contenttypeid}, #{firstimage}, #{mapx}, #{mapy}, #{sigungucode}, #{cat1}, #{cat2}, #{cat3})
            ON DUPLICATE KEY UPDATE
                                 title = VALUES(title),
                                 zipcode = VALUES(zipcode),
                                 addr1 = VALUES(addr1),
                                 areacode = VALUES(areacode),
                                 contenttypeid = VALUES(contenttypeid),
                                 firstimage = VALUES(firstimage),
                                 mapx = VALUES(mapx),
                                 mapy = VALUES(mapy),
                                 sigungucode = VALUES(sigungucode),
                                 cat1 = VALUES(cat1),
                                 cat2 = VALUES(cat2),
                                 cat3 = VALUES(cat3);
    </insert>


    <select id="touristFindAll" flushCache="true" resultType="com.lec.spring.domain.TouristData">
        SELECT * FROM tourist ORDER BY id DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>
    <select id="restauranFindAll" flushCache="true" resultType="com.lec.spring.domain.RestaurantData">
        SELECT * FROM restaurant ORDER BY id DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>
    <select id="culturalFindAll" flushCache="true" resultType="com.lec.spring.domain.CulturalData">
        SELECT * FROM cultural ORDER BY id DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>
    <select id="festivalFindAll" flushCache="true" resultType="com.lec.spring.domain.FestivalData">
        SELECT * FROM festival ORDER BY id DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>
    <select id="sportFindAll" flushCache="true" resultType="com.lec.spring.domain.SportsData">
        SELECT * FROM sports ORDER BY id DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>
    <select id="lodgmentFindAll" flushCache="true" resultType="com.lec.spring.domain.LodgmentData">
        SELECT * FROM lodgment ORDER BY id DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>
    <select id="shoppingFindAll" flushCache="true" resultType="com.lec.spring.domain.ShoppingData">
        SELECT * FROM shopping ORDER BY id DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>


    <select id="countTouristData" resultType="int">
        SELECT COUNT(*) FROM tourist
    </select>
    <select id="countRestauranData" resultType="int">
        SELECT COUNT(*) FROM restaurant
    </select>
    <select id="countCulturalData" resultType="int">
        SELECT COUNT(*) FROM cultural
    </select>
    <select id="countFestivalData" resultType="int">
        SELECT COUNT(*) FROM festival
    </select>
    <select id="countSporttData" resultType="int">
        SELECT COUNT(*) FROM sports
    </select>
    <select id="countLodgmentData" resultType="int">
        SELECT COUNT(*) FROM lodgment
    </select>
    <select id="countShoppingData" resultType="int">
        SELECT COUNT(*) FROM shopping
    </select>
</mapper>